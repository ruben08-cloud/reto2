# El objetivo principal de este sistema es calcular el salario de cada empleado. 
# El código implementa un sistema de nóminas utilizando clases para representar empleados genéricos y 
# programadores con atributos como salario y lenguaje de programación. 
# Los salarios se calculan con reglas específicas (por ejemplo: aumento del 10% para programadores), 
# y el sistema imprime la información de cada empleado. 
# Finalmente, ejecuta el cálculo sobre una lista de empleados.




print ("Bienvenido al sistema de nóminas de la empresa")
class Empleado:
    def __init__(self, nombre, salario_base):
        self.nombre = nombre
        self.salario_base = salario_base

    def calcular_salario(self):
        return self.salario_base



class Programador(Empleado):
    def __init__(self, nombre, salario_base, lenguaje_de_programacion):
        super().__init__(nombre, salario_base)
        self.lenguaje_de_programacion = lenguaje_de_programacion

    def calcular_salario(self):
        return self.salario_base * 1.1



class SistemaNominas:
    def calcular_nominas(self, empleados):
        print('Calculando nóminas...')
        print('====================')
        for empleado in empleados:
            print(f'Empleado: {empleado.nombre}')
            if isinstance(empleado, Programador):
                print(f'Lenguaje de programación: {empleado.lenguaje_de_programacion}')
            print(f'Salario calculado: ${empleado.calcular_salario():.2f}')
            print('')



empleados = [
    Programador("Jon", 5000, "Python"),
    Programador("Maria", 6000, "Java"),
    Empleado("Leo", 4000)  
]


nominas = SistemaNominas()
nominas.calcular_nominas(empleados)
